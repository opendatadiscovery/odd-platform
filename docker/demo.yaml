version: "3.3"
services:
  database:
    image: postgres:13.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    ports:
      - 5432:5432

  odd-platform:
    image: ghcr.io/opendatadiscovery/odd-platform:latest
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/${POSTGRES_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - database
    ports:
      - 8080:8080

  odd-platform-enricher:
    image: python:3.9.12-alpine3.15
    volumes:
      - ../injector:/injector
      - ./config/injector:/samples
    command:
      - sh
      - ./injector/start.sh
    environment:
      - PLATFORM_HOST_URL=${PLATFORM_HOST_URL}
      - PYTHONUNBUFFERED=1
    depends_on:
      - odd-platform

  sample-postgresql:
    image: postgres:13.2-alpine
    restart: always
    volumes:
      - ./config/dump.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=${SAMPLE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${SAMPLE_POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${SAMPLE_POSTGRES_DATABASE}

  odd-collector:
    image: ghcr.io/opendatadiscovery/odd-collector:latest
    restart: always
    volumes:
      - ./config/collector_config.yaml:/app/collector_config.yaml
    environment:
      - PLATFORM_HOST_URL=${PLATFORM_HOST_URL}
      - SAMPLE_POSTGRES_HOST=sample-postgresql
      - SAMPLE_POSTGRES_USER=${SAMPLE_POSTGRES_USER}
      - SAMPLE_POSTGRES_DATABASE=${SAMPLE_POSTGRES_DATABASE}
      - SAMPLE_POSTGRES_PASSWORD=${SAMPLE_POSTGRES_PASSWORD}
    depends_on:
      - sample-postgresql
