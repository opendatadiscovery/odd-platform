version: "3.8"
services:
  # --- ODD Platform ---
  database:
    image: postgres:13.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    ports:
      - 5432:5432

  odd-platform:
    image: ghcr.io/opendatadiscovery/odd-platform:latest
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/${POSTGRES_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - database
    ports:
      - 8080:8080

  # --- ODD Platform Puller ---
  odd-platform-puller:
    image: ghcr.io/opendatadiscovery/odd-platform-puller:latest
    environment:
      - PLATFORM_HOST_URL=${PLATFORM_HOST_URL}
    depends_on:
      - odd-platform

  # --- ODD Adapters ---
  mysql-adapter:
    image: ghcr.io/opendatadiscovery/adapters/odd-mysql-adapter:latest
    environment:
      - MYSQL_HOST=${MYSQLHOST}
      - MYSQL_PORT=${MYSQLPORT}
      - MYSQL_DATABASE=${MYSQLDATABASE}
      - MYSQL_USER=${MYSQLUSER}
      - MYSQL_PASSWORD=${MYSQLPASSWORD}
      - FLASK_ENVIRONMENT=${FLASK_ENVIRONMENT}
      - FLASK_APP=${FLASK_APP}
    ports:
      - 8084:8080
    depends_on:
      - odd-platform-puller

  postgresql-adapter:
    image: ghcr.io/opendatadiscovery/adapters/odd-postgresql-adapter:latest
    environment:
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - PGDATABASE=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - FLASK_ENVIRONMENT=${FLASK_ENVIRONMENT}
      - FLASK_APP=${FLASK_APP}
    ports:
      - 8085:8080
    depends_on:
      - odd-platform-puller

  glue-adapter:
    image: ghcr.io/opendatadiscovery/adapters/odd-glue-adapter:latest
    environment:
      - CATALOG_ID=${CATALOG_ID}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - FLASK_ENVIRONMENT=${FLASK_ENVIRONMENT}
      - FLASK_APP=${FLASK_APP}
    ports:
      - 8086:8080
    depends_on:
      - odd-platform-puller

  redshift-adapter:
    image: ghcr.io/opendatadiscovery/adapters/odd-redshift-adapter:latest
    environment:
      - REDSHIFT_HOST=${REDSHIFT_HOST}
      - REDSHIFT_PORT=${REDSHIFT_PORT}
      - REDSHIFT_DATABASE=${REDSHIFT_DATABASE}
      - REDSHIFT_USER=${REDSHIFT_USER}
      - REDSHIFT_PASSWORD=${REDSHIFT_PASSWORD}
      - FLASK_ENVIRONMENT=${FLASK_ENVIRONMENT}
      - FLASK_APP=${FLASK_APP}
    ports:
      - 8087:8080
    depends_on:
      - odd-platform-puller

  # --- OpenTelemetry collector and Prometheus backend ---
  otel-collector:
    image: otel/opentelemetry-collector
    command: [ "--config=/etc/otel/otelcol-config.yaml" ]
    volumes:
      - ${PWD}/docker/config/otel_collector.yaml:/etc/otel/otelcol-config.yaml
    environment:
      - PRW_ENDPOINT=http://prometheus:9090/api/v1/write
    ports:
      - 4317:4317
      - 55679:55679

  prometheus:
    image: prom/prometheus:v2.30.1
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--enable-feature=remote-write-receiver"
    volumes:
      - ${PWD}/docker/config/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - ${PWD}/docker/config/alert_rules.yaml:/etc/prometheus/alert_rules.yaml
    ports:
      - 9090:9090

  alertmanager:
    image: prom/alertmanager:v0.23.0
    command: [ "--config.file=/etc/alertmanager/alertmanager.yaml" ]
    volumes:
      - ${PWD}/docker/config/alertmanager.yaml:/etc/alertmanager/alertmanager.yaml
    ports:
      - 9093:9093