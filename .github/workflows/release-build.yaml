name: Release Build
on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      rebuild:
        description: 'A tag name for building previously created release'
        required: false
        default: '0.0.0'
      buildOptions:
        description: 'A additional oiptions for Gradle build command'
        required: false
        default: ''

jobs:
  release:
    runs-on: self-hosted
    outputs:
      version: ${{steps.get-version.outputs.version}}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Check version
        id: get-version
        run: |
          if [[ "${{ github.event.action }}" == "published" ]]
            then
              VERSION="${{ github.event.release.tag_name }}"
            else
              LATEST=`git tag -l --sort=creatordate | tail -1`
              VERSION=`echo ${LATEST} | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g'`-${{ github.sha }}
          fi
          if [[ -n "${{ github.event.inputs.buildOptions }}" ]]
            then
              VERSION="${{ github.event.inputs.buildOptions }}"
          fi
          echo ::set-output name=version::${VERSION}
      - name: Cache local Gradle repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-Gradle-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-Gradle-
      - name: Set up JDK 13
        uses: actions/setup-java@v2
        with:
          java-version: '13'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Build with Gradle
        env:
          CI: false
        run: |
          ./gradlew clean jibDockerBuild ${{ github.event.inputs.buildOptions }} --no-daemon --image odd-platform -P version=${{ steps.get-version.outputs.version }}
      - name: Retag image in GHCR
        uses: kindaninja/retag-image-ghcr@0.1.0
        if: ${{ github.event.action == 'published' }}
        with:
          registry: opendatadiscovery
          image: odd-platform
          current_tag: ${{ steps.get-version.outputs.version }}
          new_tag: ${{ steps.get-version.outputs.version }}
          username: github
          password: ${{ secrets.GITHUB_TOKEN }}
