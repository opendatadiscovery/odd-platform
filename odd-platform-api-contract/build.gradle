plugins {
    id 'org.openapi.generator' version '5.3.0'
}

dependencies {
    compileOnly "org.springframework.boot:spring-boot-starter-webflux:$springWebfluxVersion"

    compileOnly "javax.validation:validation-api:$validationApiVersion"
    compileOnly "javax.annotation:javax.annotation-api:$annotationApiVersion"
    compileOnly "io.swagger:swagger-annotations:$swaggerAnnotationsVersion"

    compileOnly "io.springfox:springfox-boot-starter:$springfoxBootStarterVersion"
    compileOnly "org.openapitools:jackson-databind-nullable:$jacksonDatabindVersion"
}

openApiGenerate {
    generatorName = "spring"

    inputSpec = "$projectDir/../odd-platform-specification/openapi.yaml"
    outputDir = "$buildDir/generated"

    apiPackage = "com.provectus.oddplatform.api.contract.api"
    invokerPackage = "com.provectus.oddplatform.api.contract"
    modelPackage = "com.provectus.oddplatform.api.contract.model"

    configOptions = [
            dateLibrary  : "java8",
            reactive     : "true",
            interfaceOnly: "true",
            useTags      : "true"
    ]

    globalProperties = [
            supportingFiles: "ApiUtil.java",
            apiTests       : "false",
            models         : "",
            apis           : ""
    ]
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}

compileJava.dependsOn tasks.openApiGenerate